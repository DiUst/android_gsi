From 17f79dbb2628b9c58048a5d19b0bf02af7287de7 Mon Sep 17 00:00:00 2001
From: Pierre-Hugues Husson <phh@phh.me>
Date: Mon, 12 Aug 2019 23:49:56 +0200
Subject: [PATCH 6/9] Plugin Samsung RadioIndication/RadioResponse to get
 signal strength

Change-Id: Ic3d5801627bf3dd72d2e7b6bb3741b9d368d1f07
---
 Android.bp                                    |   1 +
 .../com/android/internal/telephony/RIL.java   |  25 +-
 .../telephony/SamsungRadioIndication.java     | 303 ++++++++
 .../telephony/SamsungRadioResponse.java       | 684 ++++++++++++++++++
 4 files changed, 1011 insertions(+), 2 deletions(-)
 create mode 100644 src/java/com/android/internal/telephony/SamsungRadioIndication.java
 create mode 100644 src/java/com/android/internal/telephony/SamsungRadioResponse.java

diff --git a/Android.bp b/Android.bp
index ae678cb54..bb9925beb 100644
--- a/Android.bp
+++ b/Android.bp
@@ -56,6 +56,7 @@ java_library {
         "android.hardware.radio-V1.3-java",
         "android.hardware.radio-V1.4-java",
         "vendor.mediatek.hardware.radio-V2.0-java",
+        "vendor.samsung.hardware.radio-V1.2-java",
         "voip-common",
         "ims-common",
         "services",
diff --git a/src/java/com/android/internal/telephony/RIL.java b/src/java/com/android/internal/telephony/RIL.java
index 96f1efdd7..4b94ca5d4 100644
--- a/src/java/com/android/internal/telephony/RIL.java
+++ b/src/java/com/android/internal/telephony/RIL.java
@@ -248,6 +248,7 @@ public class RIL extends BaseCommands implements CommandsInterface {
     vendor.mediatek.hardware.radio.V2_0.IRadioResponse mMtkRadioResponse;
     vendor.mediatek.hardware.radio.V2_0.IRadioIndication mMtkRadioIndication;
     volatile vendor.mediatek.hardware.radio.V2_0.IRadio mMtkRadioProxy = null;
+    volatile vendor.samsung.hardware.radio.V1_2.IRadio mSamsungRadioProxy = null;
 
     //***** Events
     static final int EVENT_WAKE_LOCK_TIMEOUT    = 2;
@@ -432,6 +433,26 @@ public class RIL extends BaseCommands implements CommandsInterface {
             return mRadioProxy;
         }
 
+        String halName = HIDL_SERVICE_NAME[mPhoneId == null ? 0 : mPhoneId];
+
+            try {
+                mSamsungRadioProxy = vendor.samsung.hardware.radio.V1_2.IRadio.getService(halName);
+                mRadioProxy = mSamsungRadioProxy;
+                Rlog.e("PHH", "Got samsung radio proxy " + mSamsungRadioProxy);
+                if(mSamsungRadioProxy != null) {
+                    Rlog.e("PHH", "Setting response");
+                mRadioProxy.linkToDeath(mRadioProxyDeathRecipient,
+                        mRadioProxyCookie.incrementAndGet());
+                    mSamsungRadioProxy.setResponseFunctions(
+                            new SamsungRadioResponse(this, mRadioResponse),
+                            new SamsungRadioIndication(this, mRadioIndication)
+                    );
+                }
+                return mRadioProxy;
+            } catch(Exception e) {
+                Rlog.e("PHH", "Failed getting samsung hardware radio", e);
+            }
+
         try {
             if (mDisabledRadioServices.contains(mPhoneId)) {
                 riljLoge("getRadioProxy: mRadioProxy for " + HIDL_SERVICE_NAME[mPhoneId]
@@ -508,8 +529,7 @@ public class RIL extends BaseCommands implements CommandsInterface {
         if (mRadioProxy != null) {
             try {
                 mMtkRadioProxy =
-                    vendor.mediatek.hardware.radio.V2_0.IRadio.getService(
-                        HIDL_SERVICE_NAME[mPhoneId == null ? 0 : mPhoneId]);
+                    vendor.mediatek.hardware.radio.V2_0.IRadio.getService(halName);
                 if (mMtkRadioProxy != null) {
                     if (mMtkRadioResponse == null && mMtkRadioIndication == null) {
                         mMtkRadioResponse = new MtkRadioResponse(this, mRadioResponse);
@@ -520,6 +540,7 @@ public class RIL extends BaseCommands implements CommandsInterface {
             } catch (RemoteException | RuntimeException e) {
                 riljLog("MTK RadioProxy is not available");
             }
+
         }
         return mRadioProxy;
     }
diff --git a/src/java/com/android/internal/telephony/SamsungRadioIndication.java b/src/java/com/android/internal/telephony/SamsungRadioIndication.java
new file mode 100644
index 000000000..9eadec147
--- /dev/null
+++ b/src/java/com/android/internal/telephony/SamsungRadioIndication.java
@@ -0,0 +1,303 @@
+package com.android.internal.telephony;
+
+import android.hardware.radio.V1_0.SetupDataCallResult;
+
+import java.util.ArrayList;
+
+import vendor.samsung.hardware.radio.V1_2.IRadioIndication;
+
+import vendor.samsung.hardware.radio.V1_2.ApnProfile;
+import vendor.samsung.hardware.radio.V1_2.SecSignalStrength;
+import vendor.samsung.hardware.radio.V1_2.OemSSReleaseComplete;
+import vendor.samsung.hardware.radio.V1_2.DcParam;
+import vendor.samsung.hardware.radio.V1_2.NrSignalStrength;
+import android.hardware.radio.V1_2.PhysicalChannelConfig;
+
+public class SamsungRadioIndication extends IRadioIndication.Stub {
+    RIL mRil;
+    RadioIndication mIndication;
+
+    SamsungRadioIndication(RIL ril, RadioIndication indication) {
+        mRil = ril;
+        mIndication = indication;
+    }
+
+    //++ Radio V1_0
+    public void radioStateChanged(int type, int radioState) {
+        mIndication.radioStateChanged(type, radioState);
+    }
+
+    public void callStateChanged(int type) {
+        mIndication.callStateChanged(type);
+    }
+
+    public void networkStateChanged(int type) {
+        mIndication.networkStateChanged(type);
+    }
+
+    public void newSms(int type, ArrayList<Byte> pdu) {
+        mIndication.newSms(type, pdu);
+    }
+
+    public void newSmsStatusReport(int type, ArrayList<Byte> pdu) {
+        mIndication.newSmsStatusReport(type, pdu);
+    }
+
+    public void newSmsOnSim(int type, int recordNumber) {
+        mIndication.newSmsOnSim(type, recordNumber);
+    }
+
+    public void onUssd(int type, int modeType, String msg) {
+        mIndication.onUssd(type, modeType, msg);
+    }
+
+    public void nitzTimeReceived(int type, String nitzTime, long receivedTime) {
+        mIndication.nitzTimeReceived(type, nitzTime, receivedTime);
+    }
+
+    public void currentSignalStrength(int type, android.hardware.radio.V1_0.SignalStrength signalStrength) {
+        mIndication.currentSignalStrength(type, signalStrength);
+    }
+
+    public void dataCallListChanged(int type, ArrayList<SetupDataCallResult> dcList) {
+        mIndication.dataCallListChanged(type, dcList);
+    }
+
+    public void suppSvcNotify(int type, android.hardware.radio.V1_0.SuppSvcNotification suppSvc) {
+        mIndication.suppSvcNotify(type, suppSvc);
+    }
+
+    public void stkSessionEnd(int type) {
+        mIndication.stkSessionEnd(type);
+    }
+
+    public void stkProactiveCommand(int type, String cmd) {
+        mIndication.stkProactiveCommand(type, cmd);
+    }
+
+    public void stkEventNotify(int type, String cmd) {
+        mIndication.stkEventNotify(type, cmd);
+    }
+
+    public void stkCallSetup(int type, long timeout) {
+        mIndication.stkCallSetup(type, timeout);
+    }
+
+    public void simSmsStorageFull(int type) {
+        mIndication.simSmsStorageFull(type);
+    }
+
+    public void simRefresh(int type, android.hardware.radio.V1_0.SimRefreshResult refreshResult) {
+        mIndication.simRefresh(type, refreshResult);
+    }
+
+    public void callRing(int type, boolean isGsm, android.hardware.radio.V1_0.CdmaSignalInfoRecord record) {
+        mIndication.callRing(type, isGsm, record);
+    }
+
+    public void simStatusChanged(int type) {
+        mIndication.simStatusChanged(type);
+    }
+
+    public void cdmaNewSms(int type, android.hardware.radio.V1_0.CdmaSmsMessage msg) {
+        mIndication.cdmaNewSms(type, msg);
+    }
+
+    public void newBroadcastSms(int type, ArrayList<Byte> data) {
+        mIndication.newBroadcastSms(type, data);
+    }
+
+    public void cdmaRuimSmsStorageFull(int type) {
+        mIndication.cdmaRuimSmsStorageFull(type);
+    }
+
+    public void restrictedStateChanged(int type, int state) {
+        mIndication.restrictedStateChanged(type, state);
+    }
+
+    public void enterEmergencyCallbackMode(int type) {
+        mIndication.enterEmergencyCallbackMode(type);
+    }
+
+    public void cdmaCallWaiting(int type, android.hardware.radio.V1_0.CdmaCallWaiting callWaitingRecord) {
+        mIndication.cdmaCallWaiting(type, callWaitingRecord);
+    }
+
+    public void cdmaOtaProvisionStatus(int type, int status) {
+        mIndication.cdmaOtaProvisionStatus(type, status);
+    }
+
+    public void cdmaInfoRec(int type, android.hardware.radio.V1_0.CdmaInformationRecords records) {
+        mIndication.cdmaInfoRec(type, records);
+    }
+
+    public void indicateRingbackTone(int type, boolean start) {
+        mIndication.indicateRingbackTone(type, start);
+    }
+
+    public void resendIncallMute(int type) {
+        mIndication.resendIncallMute(type);
+    }
+
+    public void cdmaSubscriptionSourceChanged(int type, int cdmaSource) {
+        mIndication.cdmaSubscriptionSourceChanged(type, cdmaSource);
+    }
+
+    public void cdmaPrlChanged(int type, int version) {
+        mIndication.cdmaPrlChanged(type, version);
+    }
+
+    public void exitEmergencyCallbackMode(int type) {
+        mIndication.exitEmergencyCallbackMode(type);
+    }
+
+    public void rilConnected(int type) {
+        mIndication.rilConnected(type);
+    }
+
+    public void voiceRadioTechChanged(int type, int rat) {
+        mIndication.voiceRadioTechChanged(type, rat);
+    }
+
+    public void cellInfoList(int type, ArrayList<android.hardware.radio.V1_0.CellInfo> records) {
+        mIndication.cellInfoList(type, records);
+    }
+
+    public void imsNetworkStateChanged(int type) {
+        mIndication.imsNetworkStateChanged(type);
+    }
+
+    public void subscriptionStatusChanged(int type, boolean activate) {
+        mIndication.subscriptionStatusChanged(type, activate);
+    }
+
+    public void srvccStateNotify(int type, int state) {
+        mIndication.srvccStateNotify(type, state);
+    }
+
+    public void hardwareConfigChanged(int type, ArrayList<android.hardware.radio.V1_0.HardwareConfig> configs) {
+        mIndication.hardwareConfigChanged(type, configs);
+    }
+
+    public void radioCapabilityIndication(int type, android.hardware.radio.V1_0.RadioCapability rc) {
+        mIndication.radioCapabilityIndication(type, rc);
+    }
+
+    public void onSupplementaryServiceIndication(int type, android.hardware.radio.V1_0.StkCcUnsolSsResult ss) {
+        mIndication.onSupplementaryServiceIndication(type, ss);
+    }
+
+    public void stkCallControlAlphaNotify(int type, String alpha) {
+        mIndication.stkCallControlAlphaNotify(type, alpha);
+    }
+
+    public void lceData(int type, android.hardware.radio.V1_0.LceDataInfo lce) {
+        mIndication.lceData(type, lce);
+    }
+
+    public void pcoData(int type, android.hardware.radio.V1_0.PcoDataInfo pco) {
+        mIndication.pcoData(type, pco);
+    }
+
+    public void modemReset(int type, String reason) {
+        mIndication.modemReset(type, reason);
+    }
+    //-- Radio V1_0
+
+    //++ Radio V1_1
+    public void carrierInfoForImsiEncryption(int type) {
+        mIndication.carrierInfoForImsiEncryption(type);
+    }
+
+    public void networkScanResult(int type, android.hardware.radio.V1_1.NetworkScanResult result) {
+        mIndication.networkScanResult(type, result);
+    }
+
+    public void keepaliveStatus(int type, android.hardware.radio.V1_1.KeepaliveStatus status) {
+        mIndication.keepaliveStatus(type, status);
+    }
+
+    //-- Radio V1_1
+
+    //++ Radio V1_2
+    public void networkScanResult_1_2(int type, android.hardware.radio.V1_2.NetworkScanResult result) {
+        mIndication.networkScanResult_1_2(type, result);
+    }
+
+    public void cellInfoList_1_2(int type, ArrayList<android.hardware.radio.V1_2.CellInfo> records) {
+        mIndication.cellInfoList_1_2(type, records);
+    }
+
+    public void currentLinkCapacityEstimate(int type, android.hardware.radio.V1_2.LinkCapacityEstimate lce) {
+        mIndication.currentLinkCapacityEstimate(type, lce);
+    }
+
+    public void currentPhysicalChannelConfigs(int type, ArrayList<PhysicalChannelConfig> configs) {
+        mIndication.currentPhysicalChannelConfigs(type, configs);
+    }
+
+    public void currentSignalStrength_1_2(int type, android.hardware.radio.V1_2.SignalStrength signalStrength) {
+        mIndication.currentSignalStrength_1_2(type, signalStrength);
+    }
+    //-- Radio V1_2
+
+    public void secCurrentSignalStrength(int type, SecSignalStrength signalStrength) {
+        mIndication.currentSignalStrength_1_2(type, signalStrength.base);
+    }
+    public void secImsNetworkStateChanged(int type, ArrayList<Integer> regState) {
+    }
+    public void oemAcbInfoChanged(int type, ArrayList<Integer> acbInfo) {
+    }
+    public void oemCsFallback(int type, int state) {
+    }
+    public void oemImsPreferenceChangeInd(int type, ArrayList<Integer> imsPref) {
+    }
+    public void oemVoiceRadioBearerHoStatusInd(int type, int state) {
+    }
+    public void oemHysteresisDcnInd(int type) {
+    }
+    public void oemTimerStatusChangedInd(int type, ArrayList<Integer> eventNoti) {
+    }
+    public void oemModemCapInd(int type, ArrayList<Byte> data) {
+    }
+    public void oemAmInd(int type, String intent) {
+    }
+    public void oemTrunRadioOnInd(int type) {
+    }
+    public void oemSimPbReadyInd(int type) {
+    }
+    public void oemPbInitCompleteInd(int type) {
+    }
+    public void oemDeviceReadyNoti(int type) {
+    }
+    public void oemStkSmsSendResultInd(int type, int result) {
+    }
+    public void oemStkCallControlResultInd(int type, String cmd) {
+    }
+    public void oemSimSwapStateChangedInd(int type, int state) {
+    }
+    public void oemSimCountMismatchedInd(int type, int state) {
+    }
+    public void oemSimIccidNoti(int type, String iccid) {
+    }
+    public void oemSimOnOffNoti(int type, int mode) {
+    }
+    public void oemReleaseCompleteMessageInd(int typer, OemSSReleaseComplete result) {
+    }
+    public void oemSapNoti(int type, ArrayList<Byte> data) {
+    }
+    public void oemNrBearerAllocationChangeInd(int type, int status) {
+    }
+    public void oem5gStatusChangeInd(int type, int status) {
+    }
+    public void oemNrDcParamChangeInd(int type, DcParam dcParam) {
+    }
+    public void oemNrSignalStrengthInd(int type, NrSignalStrength nrSignalStrength) {
+    }
+    public ApnProfile oemLoadApnProfile(String select) {
+        return null;
+    }
+    public int oemGetSettingValue(String key, String table) {
+        return 0;
+    }
+}
diff --git a/src/java/com/android/internal/telephony/SamsungRadioResponse.java b/src/java/com/android/internal/telephony/SamsungRadioResponse.java
new file mode 100644
index 000000000..63e680afb
--- /dev/null
+++ b/src/java/com/android/internal/telephony/SamsungRadioResponse.java
@@ -0,0 +1,684 @@
+package com.android.internal.telephony;
+
+import android.hardware.radio.V1_0.ActivityStatsInfo;
+import android.hardware.radio.V1_0.CallForwardInfo;
+import android.hardware.radio.V1_0.Call;
+import android.hardware.radio.V1_0.CardStatus;
+import android.hardware.radio.V1_0.CarrierRestrictions;
+import android.hardware.radio.V1_0.CdmaBroadcastSmsConfigInfo;
+import android.hardware.radio.V1_0.CellInfo;
+import android.hardware.radio.V1_0.DataRegStateResult;
+import android.hardware.radio.V1_0.HardwareConfig;
+import android.hardware.radio.V1_0.IccIoResult;
+import android.hardware.radio.V1_0.GsmBroadcastSmsConfigInfo;
+import android.hardware.radio.V1_0.LastCallFailCauseInfo;
+import android.hardware.radio.V1_0.LceDataInfo;
+import android.hardware.radio.V1_0.LceStatusInfo;
+import android.hardware.radio.V1_0.NeighboringCell;
+import android.hardware.radio.V1_0.OperatorInfo;
+import android.hardware.radio.V1_0.RadioCapability;
+import android.hardware.radio.V1_0.RadioResponseInfo;
+import android.hardware.radio.V1_0.SendSmsResult;
+import android.hardware.radio.V1_0.SetupDataCallResult;
+import android.hardware.radio.V1_0.SignalStrength;
+import android.hardware.radio.V1_0.VoiceRegStateResult;
+import android.hardware.radio.V1_1.KeepaliveStatus;
+
+import java.util.ArrayList;
+
+import vendor.samsung.hardware.radio.V1_2.IRadioResponse;
+
+import vendor.samsung.hardware.radio.V1_2.SecCall;
+import vendor.samsung.hardware.radio.V1_2.SecCardStatus;
+import vendor.samsung.hardware.radio.V1_2.SecSignalStrength;
+import vendor.samsung.hardware.radio.V1_2.SecVoiceRegStateResult;
+import vendor.samsung.hardware.radio.V1_2.SecDataRegStateResult;
+import vendor.samsung.hardware.radio.V1_2.SecOperatorInfo;
+import vendor.samsung.hardware.radio.V1_2.OemPreferredNetworkInfo;
+import vendor.samsung.hardware.radio.V1_2.OemSimPBResponse;
+import vendor.samsung.hardware.radio.V1_2.OemCbConfigArgs;
+import vendor.samsung.hardware.radio.V1_2.SecSendSmsResult;
+import vendor.samsung.hardware.radio.V1_2.DcParam;
+import vendor.samsung.hardware.radio.V1_2.NrSignalStrength;
+import vendor.samsung.hardware.radio.V1_2.OemCsgInfo;
+
+public class SamsungRadioResponse extends IRadioResponse.Stub {
+    RIL mRil;
+    RadioResponse mResponse;
+
+    SamsungRadioResponse(RIL ril, RadioResponse response) {
+      mRil = ril;
+        mResponse = response;
+    }
+
+    //++ Radio V1_0
+    public void getIccCardStatusResponse(RadioResponseInfo info, CardStatus cardStatus) {
+        mResponse.getIccCardStatusResponse(info, cardStatus);
+    }
+    public void supplyIccPinForAppResponse(RadioResponseInfo info, int remainingRetries) {
+        mResponse.supplyIccPinForAppResponse(info, remainingRetries);
+    }
+
+    public void supplyIccPukForAppResponse(RadioResponseInfo info, int remainingRetries) {
+        mResponse.supplyIccPukForAppResponse(info, remainingRetries);
+    }
+
+    public void supplyIccPin2ForAppResponse(RadioResponseInfo info, int remainingRetries) {
+        mResponse.supplyIccPin2ForAppResponse(info, remainingRetries);
+    }
+
+    public void supplyIccPuk2ForAppResponse(RadioResponseInfo info, int remainingRetries) {
+        mResponse.supplyIccPuk2ForAppResponse(info, remainingRetries);
+    }
+
+    public void changeIccPinForAppResponse(RadioResponseInfo info, int remainingRetries) {
+        mResponse.changeIccPinForAppResponse(info, remainingRetries);
+    }
+
+    public void changeIccPin2ForAppResponse(RadioResponseInfo info, int remainingRetries) {
+        mResponse.changeIccPin2ForAppResponse(info, remainingRetries);
+    }
+
+    public void supplyNetworkDepersonalizationResponse(RadioResponseInfo info, int remainingRetries) {
+        mResponse.supplyNetworkDepersonalizationResponse(info, remainingRetries);
+    }
+
+    public void getCurrentCallsResponse(RadioResponseInfo info, ArrayList<Call> calls) {
+        mResponse.getCurrentCallsResponse(info, calls);
+    }
+
+    public void dialResponse(RadioResponseInfo info) {
+        mResponse.dialResponse(info);
+    }
+
+    public void getIMSIForAppResponse(RadioResponseInfo info, String imsi) {
+        mResponse.getIMSIForAppResponse(info, imsi);
+    }
+
+    public void hangupConnectionResponse(RadioResponseInfo info) {
+        mResponse.hangupConnectionResponse(info);
+    }
+
+    public void hangupWaitingOrBackgroundResponse(RadioResponseInfo info) {
+        mResponse.hangupWaitingOrBackgroundResponse(info);
+    }
+
+    public void hangupForegroundResumeBackgroundResponse(RadioResponseInfo info) {
+        mResponse.hangupForegroundResumeBackgroundResponse(info);
+    }
+
+    public void switchWaitingOrHoldingAndActiveResponse(RadioResponseInfo info) {
+        mResponse.switchWaitingOrHoldingAndActiveResponse(info);
+    }
+
+    public void conferenceResponse(RadioResponseInfo info) {
+        mResponse.conferenceResponse(info);
+    }
+
+    public void rejectCallResponse(RadioResponseInfo info) {
+        mResponse.rejectCallResponse(info);
+    }
+
+    public void getLastCallFailCauseResponse(RadioResponseInfo info, LastCallFailCauseInfo failCauseinfo) {
+        mResponse.getLastCallFailCauseResponse(info, failCauseinfo);
+    }
+
+    public void getSignalStrengthResponse(RadioResponseInfo info, SignalStrength sigStrength) {
+        mResponse.getSignalStrengthResponse(info, sigStrength);
+    }
+
+    public void getVoiceRegistrationStateResponse(RadioResponseInfo info, VoiceRegStateResult voiceRegResponse) {
+        mResponse.getVoiceRegistrationStateResponse(info, voiceRegResponse);
+    }
+
+    public void getDataRegistrationStateResponse(RadioResponseInfo info, DataRegStateResult dataRegResponse) {
+        mResponse.getDataRegistrationStateResponse(info, dataRegResponse);
+    }
+
+    public void getOperatorResponse(RadioResponseInfo info, String longName, String shortName, String numeric) {
+        mResponse.getOperatorResponse(info, longName, shortName, numeric);
+    }
+
+    public void setRadioPowerResponse(RadioResponseInfo info) {
+        mResponse.setRadioPowerResponse(info);
+    }
+
+    public void sendDtmfResponse(RadioResponseInfo info) {
+        mResponse.sendDtmfResponse(info);
+    }
+
+    public void sendSmsResponse(RadioResponseInfo info, SendSmsResult sms) {
+        mResponse.sendSmsResponse(info, sms);
+    }
+
+    public void sendSMSExpectMoreResponse(RadioResponseInfo info, SendSmsResult sms) {
+        mResponse.sendSMSExpectMoreResponse(info, sms);
+    }
+
+    public void setupDataCallResponse(RadioResponseInfo info, SetupDataCallResult dcResponse) {
+        mResponse.setupDataCallResponse(info, dcResponse);
+    }
+
+    public void iccIOForAppResponse(RadioResponseInfo info, IccIoResult iccIo) {
+        mResponse.iccIOForAppResponse(info, iccIo);
+    }
+
+    public void sendUssdResponse(RadioResponseInfo info) {
+        mResponse.sendUssdResponse(info);
+    }
+
+    public void cancelPendingUssdResponse(RadioResponseInfo info) {
+        mResponse.cancelPendingUssdResponse(info);
+    }
+
+    public void getClirResponse(RadioResponseInfo info, int n, int m) {
+        mResponse.getClirResponse(info, n, m);
+    }
+
+    public void setClirResponse(RadioResponseInfo info) {
+        mResponse.setClirResponse(info);
+    }
+
+    public void getCallForwardStatusResponse(RadioResponseInfo info, ArrayList<CallForwardInfo> callForwardInfos) {
+        mResponse.getCallForwardStatusResponse(info, callForwardInfos);
+    }
+
+    public void setCallForwardResponse(RadioResponseInfo info) {
+        mResponse.setCallForwardResponse(info);
+    }
+
+    public void getCallWaitingResponse(RadioResponseInfo info, boolean enable, int serviceClass) {
+        mResponse.getCallWaitingResponse(info, enable, serviceClass);
+    }
+
+    public void setCallWaitingResponse(RadioResponseInfo info) {
+        mResponse.setCallWaitingResponse(info);
+    }
+
+    public void acknowledgeLastIncomingGsmSmsResponse(RadioResponseInfo info) {
+        mResponse.acknowledgeLastIncomingGsmSmsResponse(info);
+    }
+
+    public void acceptCallResponse(RadioResponseInfo info) {
+        mResponse.acceptCallResponse(info);
+    }
+
+    public void deactivateDataCallResponse(RadioResponseInfo info) {
+        mResponse.deactivateDataCallResponse(info);
+    }
+
+    public void getFacilityLockForAppResponse(RadioResponseInfo info, int response) {
+        mResponse.getFacilityLockForAppResponse(info, response);
+    }
+
+    public void setFacilityLockForAppResponse(RadioResponseInfo info, int retry) {
+        mResponse.setFacilityLockForAppResponse(info, retry);
+    }
+
+    public void setBarringPasswordResponse(RadioResponseInfo info) {
+        mResponse.setBarringPasswordResponse(info);
+    }
+
+    public void getNetworkSelectionModeResponse(RadioResponseInfo info, boolean manual) {
+        mResponse.getNetworkSelectionModeResponse(info, manual);
+    }
+
+    public void setNetworkSelectionModeAutomaticResponse(RadioResponseInfo info) {
+        mResponse.setNetworkSelectionModeAutomaticResponse(info);
+    }
+
+    public void setNetworkSelectionModeManualResponse(RadioResponseInfo info) {
+        mResponse.setNetworkSelectionModeManualResponse(info);
+    }
+
+    public void getAvailableNetworksResponse(RadioResponseInfo info, ArrayList<OperatorInfo> networkInfos) {
+        mResponse.getAvailableNetworksResponse(info, networkInfos);
+    }
+
+    public void startDtmfResponse(RadioResponseInfo info) {
+        mResponse.startDtmfResponse(info);
+    }
+
+    public void stopDtmfResponse(RadioResponseInfo info) {
+        mResponse.stopDtmfResponse(info);
+    }
+
+    public void getBasebandVersionResponse(RadioResponseInfo info, String version) {
+        mResponse.getBasebandVersionResponse(info, version);
+    }
+
+    public void separateConnectionResponse(RadioResponseInfo info) {
+        mResponse.separateConnectionResponse(info);
+    }
+
+    public void setMuteResponse(RadioResponseInfo info) {
+        mResponse.setMuteResponse(info);
+    }
+
+    public void getMuteResponse(RadioResponseInfo info, boolean enable) {
+        mResponse.getMuteResponse(info, enable);
+    }
+
+    public void getClipResponse(RadioResponseInfo info, int status) {
+        mResponse.getClipResponse(info, status);
+    }
+
+    public void getDataCallListResponse(RadioResponseInfo info, ArrayList<SetupDataCallResult> dcResponse) {
+        mResponse.getDataCallListResponse(info, dcResponse);
+    }
+
+    public void setSuppServiceNotificationsResponse(RadioResponseInfo info) {
+        mResponse.setSuppServiceNotificationsResponse(info);
+    }
+
+    public void writeSmsToSimResponse(RadioResponseInfo info, int index) {
+        mResponse.writeSmsToSimResponse(info, index);
+    }
+
+    public void deleteSmsOnSimResponse(RadioResponseInfo info) {
+        mResponse.deleteSmsOnSimResponse(info);
+    }
+
+    public void setBandModeResponse(RadioResponseInfo info) {
+        mResponse.setBandModeResponse(info);
+    }
+
+    public void getAvailableBandModesResponse(RadioResponseInfo info, ArrayList<Integer> bandModes) {
+        mResponse.getAvailableBandModesResponse(info, bandModes);
+    }
+
+    public void sendEnvelopeResponse(RadioResponseInfo info, String commandResponse) {
+        mResponse.sendEnvelopeResponse(info, commandResponse);
+    }
+
+    public void sendTerminalResponseToSimResponse(RadioResponseInfo info) {
+        mResponse.sendTerminalResponseToSimResponse(info);
+    }
+
+    public void handleStkCallSetupRequestFromSimResponse(RadioResponseInfo info) {
+        mResponse.handleStkCallSetupRequestFromSimResponse(info);
+    }
+
+    public void explicitCallTransferResponse(RadioResponseInfo info) {
+        mResponse.explicitCallTransferResponse(info);
+    }
+
+    public void setPreferredNetworkTypeResponse(RadioResponseInfo info) {
+        mResponse.setPreferredNetworkTypeResponse(info);
+    }
+
+    public void getPreferredNetworkTypeResponse(RadioResponseInfo info, int nwType) {
+        mResponse.getPreferredNetworkTypeResponse(info, nwType);
+    }
+
+    public void getNeighboringCidsResponse(RadioResponseInfo info, ArrayList<NeighboringCell> cells) {
+        mResponse.getNeighboringCidsResponse(info, cells);
+    }
+
+    public void setLocationUpdatesResponse(RadioResponseInfo info) {
+        mResponse.setLocationUpdatesResponse(info);
+    }
+
+    public void setCdmaSubscriptionSourceResponse(RadioResponseInfo info) {
+        mResponse.setCdmaSubscriptionSourceResponse(info);
+    }
+
+    public void setCdmaRoamingPreferenceResponse(RadioResponseInfo info) {
+        mResponse.setCdmaRoamingPreferenceResponse(info);
+    }
+
+    public void getCdmaRoamingPreferenceResponse(RadioResponseInfo info, int type) {
+        mResponse.getCdmaRoamingPreferenceResponse(info, type);
+    }
+
+    public void setTTYModeResponse(RadioResponseInfo info) {
+        mResponse.setTTYModeResponse(info);
+    }
+
+    public void getTTYModeResponse(RadioResponseInfo info, int mode) {
+        mResponse.getTTYModeResponse(info, mode);
+    }
+
+    public void setPreferredVoicePrivacyResponse(RadioResponseInfo info) {
+        mResponse.setPreferredVoicePrivacyResponse(info);
+    }
+
+    public void getPreferredVoicePrivacyResponse(RadioResponseInfo info, boolean enable) {
+        mResponse.getPreferredVoicePrivacyResponse(info, enable);
+    }
+
+    public void sendCDMAFeatureCodeResponse(RadioResponseInfo info) {
+        mResponse.sendCDMAFeatureCodeResponse(info);
+    }
+
+    public void sendBurstDtmfResponse(RadioResponseInfo info) {
+        mResponse.sendBurstDtmfResponse(info);
+    }
+
+    public void sendCdmaSmsResponse(RadioResponseInfo info, SendSmsResult sms) {
+        mResponse.sendCdmaSmsResponse(info, sms);
+    }
+
+    public void acknowledgeLastIncomingCdmaSmsResponse(RadioResponseInfo info) {
+        mResponse.acknowledgeLastIncomingCdmaSmsResponse(info);
+    }
+
+    public void getGsmBroadcastConfigResponse(RadioResponseInfo info, ArrayList<GsmBroadcastSmsConfigInfo> configs) {
+        mResponse.getGsmBroadcastConfigResponse(info, configs);
+    }
+
+    public void setGsmBroadcastConfigResponse(RadioResponseInfo info) {
+        mResponse.setGsmBroadcastConfigResponse(info);
+    }
+
+    public void setGsmBroadcastActivationResponse(RadioResponseInfo info) {
+        mResponse.setGsmBroadcastActivationResponse(info);
+    }
+
+    public void getCdmaBroadcastConfigResponse(RadioResponseInfo info, ArrayList<CdmaBroadcastSmsConfigInfo> configs) {
+        mResponse.getCdmaBroadcastConfigResponse(info, configs);
+    }
+
+    public void setCdmaBroadcastConfigResponse(RadioResponseInfo info) {
+        mResponse.setCdmaBroadcastConfigResponse(info);
+    }
+
+    public void setCdmaBroadcastActivationResponse(RadioResponseInfo info) {
+        mResponse.setCdmaBroadcastActivationResponse(info);
+    }
+
+    public void getCDMASubscriptionResponse(RadioResponseInfo info, String mdn, String hSid, String hNid, String min, String prl) {
+        mResponse.getCDMASubscriptionResponse(info, mdn, hSid, hNid, min, prl);
+    }
+
+    public void writeSmsToRuimResponse(RadioResponseInfo info, int index) {
+        mResponse.writeSmsToRuimResponse(info, index);
+    }
+
+    public void deleteSmsOnRuimResponse(RadioResponseInfo info) {
+        mResponse.deleteSmsOnRuimResponse(info);
+    }
+
+    public void getDeviceIdentityResponse(RadioResponseInfo info, String imei, String imeisv, String esn, String meid) {
+        mResponse.getDeviceIdentityResponse(info, imei, imeisv, esn, meid);
+    }
+
+    public void exitEmergencyCallbackModeResponse(RadioResponseInfo info) {
+        mResponse.exitEmergencyCallbackModeResponse(info);
+    }
+
+    public void getSmscAddressResponse(RadioResponseInfo info, String smsc) {
+        mResponse.getSmscAddressResponse(info, smsc);
+    }
+
+    public void setSmscAddressResponse(RadioResponseInfo info) {
+        mResponse.setSmscAddressResponse(info);
+    }
+
+    public void reportSmsMemoryStatusResponse(RadioResponseInfo info) {
+        mResponse.reportSmsMemoryStatusResponse(info);
+    }
+
+    public void reportStkServiceIsRunningResponse(RadioResponseInfo info) {
+        mResponse.reportStkServiceIsRunningResponse(info);
+    }
+
+    public void getCdmaSubscriptionSourceResponse(RadioResponseInfo info, int source) {
+        mResponse.getCdmaSubscriptionSourceResponse(info, source);
+    }
+
+    public void requestIsimAuthenticationResponse(RadioResponseInfo info, String response) {
+        mResponse.requestIsimAuthenticationResponse(info, response);
+    }
+
+    public void acknowledgeIncomingGsmSmsWithPduResponse(RadioResponseInfo info) {
+        mResponse.acknowledgeIncomingGsmSmsWithPduResponse(info);
+    }
+
+    public void sendEnvelopeWithStatusResponse(RadioResponseInfo info, IccIoResult iccIo) {
+        mResponse.sendEnvelopeWithStatusResponse(info, iccIo);
+    }
+
+    public void getVoiceRadioTechnologyResponse(RadioResponseInfo info, int rat) {
+        mResponse.getVoiceRadioTechnologyResponse(info, rat);
+    }
+
+    public void getCellInfoListResponse(RadioResponseInfo info, ArrayList<CellInfo> cellInfo) {
+        mResponse.getCellInfoListResponse(info, cellInfo);
+    }
+
+    public void setCellInfoListRateResponse(RadioResponseInfo info) {
+        mResponse.setCellInfoListRateResponse(info);
+    }
+
+    public void setInitialAttachApnResponse(RadioResponseInfo info) {
+        mResponse.setInitialAttachApnResponse(info);
+    }
+
+    public void getImsRegistrationStateResponse(RadioResponseInfo info, boolean isRegistered, int ratFamily) {
+        mResponse.getImsRegistrationStateResponse(info, isRegistered, ratFamily);
+    }
+
+    public void sendImsSmsResponse(RadioResponseInfo info, SendSmsResult sms) {
+        mResponse.sendImsSmsResponse(info, sms);
+    }
+
+    public void iccTransmitApduBasicChannelResponse(RadioResponseInfo info, IccIoResult result) {
+        mResponse.iccTransmitApduBasicChannelResponse(info, result);
+    }
+
+    public void iccOpenLogicalChannelResponse(RadioResponseInfo info, int channelId, ArrayList<Byte> selectResponse) {
+        mResponse.iccOpenLogicalChannelResponse(info, channelId, selectResponse);
+    }
+
+    public void iccCloseLogicalChannelResponse(RadioResponseInfo info) {
+        mResponse.iccCloseLogicalChannelResponse(info);
+    }
+
+    public void iccTransmitApduLogicalChannelResponse(RadioResponseInfo info, IccIoResult result) {
+        mResponse.iccTransmitApduLogicalChannelResponse(info, result);
+    }
+
+    public void nvReadItemResponse(RadioResponseInfo info, String result) {
+        mResponse.nvReadItemResponse(info, result);
+    }
+
+    public void nvWriteItemResponse(RadioResponseInfo info) {
+        mResponse.nvWriteItemResponse(info);
+    }
+
+    public void nvWriteCdmaPrlResponse(RadioResponseInfo info) {
+        mResponse.nvWriteCdmaPrlResponse(info);
+    }
+
+    public void nvResetConfigResponse(RadioResponseInfo info) {
+        mResponse.nvResetConfigResponse(info);
+    }
+
+    public void setUiccSubscriptionResponse(RadioResponseInfo info) {
+        mResponse.setUiccSubscriptionResponse(info);
+    }
+
+    public void setDataAllowedResponse(RadioResponseInfo info) {
+        mResponse.setDataAllowedResponse(info);
+    }
+
+    public void getHardwareConfigResponse(RadioResponseInfo info, ArrayList<HardwareConfig> config) {
+        mResponse.getHardwareConfigResponse(info, config);
+    }
+
+    public void requestIccSimAuthenticationResponse(RadioResponseInfo info, IccIoResult result) {
+        mResponse.requestIccSimAuthenticationResponse(info, result);
+    }
+
+    public void setDataProfileResponse(RadioResponseInfo info) {
+        mResponse.setDataProfileResponse(info);
+    }
+
+    public void requestShutdownResponse(RadioResponseInfo info) {
+        mResponse.requestShutdownResponse(info);
+    }
+
+    public void getRadioCapabilityResponse(RadioResponseInfo info, RadioCapability rc) {
+        mResponse.getRadioCapabilityResponse(info, rc);
+    }
+
+    public void setRadioCapabilityResponse(RadioResponseInfo info, RadioCapability rc) {
+        mResponse.setRadioCapabilityResponse(info, rc);
+    }
+
+    public void startLceServiceResponse(RadioResponseInfo info, LceStatusInfo statusInfo) {
+        mResponse.startLceServiceResponse(info, statusInfo);
+    }
+
+    public void stopLceServiceResponse(RadioResponseInfo info, LceStatusInfo statusInfo) {
+        mResponse.stopLceServiceResponse(info, statusInfo);
+    }
+
+    public void pullLceDataResponse(RadioResponseInfo info, LceDataInfo lceInfo) {
+        mResponse.pullLceDataResponse(info, lceInfo);
+    }
+
+    public void getModemActivityInfoResponse(RadioResponseInfo info, ActivityStatsInfo activityInfo) {
+        mResponse.getModemActivityInfoResponse(info, activityInfo);
+    }
+
+    public void setAllowedCarriersResponse(RadioResponseInfo info, int numAllowed) {
+        mResponse.setAllowedCarriersResponse(info, numAllowed);
+    }
+
+    public void getAllowedCarriersResponse(RadioResponseInfo info, boolean allAllowed, CarrierRestrictions carriers) {
+        mResponse.getAllowedCarriersResponse(info, allAllowed, carriers);
+    }
+
+    public void sendDeviceStateResponse(RadioResponseInfo info) {
+        mResponse.sendDeviceStateResponse(info);
+    }
+
+    public void setIndicationFilterResponse(RadioResponseInfo info) {
+        mResponse.setIndicationFilterResponse(info);
+    }
+
+    public void setSimCardPowerResponse(RadioResponseInfo info) {
+        mResponse.setSimCardPowerResponse(info);
+    }
+
+    public void acknowledgeRequest(int serial) {
+        mResponse.acknowledgeRequest(serial);
+    }
+    //-- Radio V1_0
+
+    //++ Radio V1_1
+    public void setCarrierInfoForImsiEncryptionResponse(RadioResponseInfo info) {
+        mResponse.setCarrierInfoForImsiEncryptionResponse(info);
+    }
+
+    public void setSimCardPowerResponse_1_1(RadioResponseInfo info) {
+        mResponse.setSimCardPowerResponse_1_1(info);
+    }
+
+    public void startNetworkScanResponse(RadioResponseInfo info) {
+        mResponse.startNetworkScanResponse(info);
+    }
+
+    public void stopNetworkScanResponse(RadioResponseInfo info) {
+        mResponse.stopNetworkScanResponse(info);
+    }
+
+    public void startKeepaliveResponse(RadioResponseInfo info, KeepaliveStatus status) {
+        mResponse.startKeepaliveResponse(info, status);
+    }
+
+    public void stopKeepaliveResponse(RadioResponseInfo info) {
+        mResponse.stopKeepaliveResponse(info);
+    }
+    //-- Radio V1_1
+
+    //++Radio V1_2
+    public void getCellInfoListResponse_1_2(RadioResponseInfo info, ArrayList<android.hardware.radio.V1_2.CellInfo> cellInfo) {
+        mResponse.getCellInfoListResponse_1_2(info, cellInfo);
+    }
+    public void getIccCardStatusResponse_1_2(RadioResponseInfo info, android.hardware.radio.V1_2.CardStatus cardStatus) {
+        mResponse.getIccCardStatusResponse_1_2(info, cardStatus);
+    }
+    public void setSignalStrengthReportingCriteriaResponse(RadioResponseInfo info) {
+        mResponse.setSignalStrengthReportingCriteriaResponse(info);
+    }
+    public void setLinkCapacityReportingCriteriaResponse(RadioResponseInfo info) {
+        mResponse.setLinkCapacityReportingCriteriaResponse(info);
+    }
+    public void getCurrentCallsResponse_1_2(RadioResponseInfo info, ArrayList<android.hardware.radio.V1_2.Call> calls) {
+        mResponse.getCurrentCallsResponse_1_2(info, calls);
+    }
+    public void getSignalStrengthResponse_1_2(RadioResponseInfo info, android.hardware.radio.V1_2.SignalStrength signalStrength) {
+        mResponse.getSignalStrengthResponse_1_2(info, signalStrength);
+    }
+    public void getVoiceRegistrationStateResponse_1_2(RadioResponseInfo info, android.hardware.radio.V1_2.VoiceRegStateResult voiceRegResponse) {
+        mResponse.getVoiceRegistrationStateResponse_1_2(info, voiceRegResponse);
+    }
+    public void getDataRegistrationStateResponse_1_2(RadioResponseInfo info, android.hardware.radio.V1_2.DataRegStateResult dataRegResponse) {
+        mResponse.getDataRegistrationStateResponse_1_2(info, dataRegResponse);
+    }
+    //-- Radio V1_2
+    public void secGetIccCardStatusReponse(RadioResponseInfo info, SecCardStatus cardStatus) {}
+    public void secSupplyNetworkDepersonalizationResponse(RadioResponseInfo info, int remainingRetries) {}
+    public void secAcceptCallResponse(RadioResponseInfo info) {}
+    public void secDialResponse(RadioResponseInfo info) {}
+    public void secGetCurrentCallsResponse(RadioResponseInfo info, ArrayList<SecCall> calls) {}
+    public void secGetSignalStrengthResponse(RadioResponseInfo info, SecSignalStrength sigStrength) {}
+    public void secGetVoiceRegistrationStateResponse(RadioResponseInfo info, SecVoiceRegStateResult voiceRegResponse) {}
+    public void secGetDataRegistrationStateResponse(RadioResponseInfo info, SecDataRegStateResult dataRegResponse) {}
+    public void secExplicitCallTransferResponse(RadioResponseInfo info) {}
+    public void secGetOperatorRespnse(RadioResponseInfo info, String longName, String shortName, String plmn, String epdgname) {}
+    public void oemSetBarringPasswordResponse(RadioResponseInfo info) {}
+    public void secgetImsRegistrationStateReponse(RadioResponseInfo info, ArrayList<Integer> regState) {}
+    public void secGetAvailableNetworkResponse(RadioResponseInfo info, ArrayList<SecOperatorInfo> networkInfo) {}
+    public void oemDialEmergencyCallResponse(RadioResponseInfo info) {}
+    public void oemCallDeflectionResponse(RadioResponseInfo info) {}
+    public void oemModifyCallInitiateResponse(RadioResponseInfo info, LastCallFailCauseInfo failCauseInfo) {}
+    public void oemSetImsCallListResponse(RadioResponseInfo info) {}
+    public void oemGetPreferredNetworkListResponse(RadioResponseInfo info, ArrayList<OemPreferredNetworkInfo> infos) {}
+    public void oemSetPreferredNetworkListResponse(RadioResponseInfo info) {}
+    public void oemSendEncodedUSSDResponse(RadioResponseInfo info) {}
+    public void oemHoldCallResponse(RadioResponseInfo info) {}
+    public void oemGetDisable2gResponse(RadioResponseInfo info, int isDisable) {}
+    public void oemSetDisable2gResponse(RadioResponseInfo info) {}
+    public void oenGetAcbInfoResponse(RadioResponseInfo info, ArrayList<Integer> acbInfo) {}
+    public void oemSetTransferCallResponse(RadioResponseInfo info) {}
+    public void oemGetICBarringResponse(RadioResponseInfo info, String numberDateList) {}
+    public void oemSetICBarringResponse(RadioResponseInfo info) {}
+    public void oemQueryCnapResponse(RadioResponseInfo info, int queryCNAP) {}
+    public void oemRefreshNitzTimeResponse(RadioResponseInfo info) {}
+    public void oemEnableUnsolResponseResponse(RadioResponseInfo info) {}
+    public void oemCancelTransferCallResponse(RadioResponseInfo info) {}
+    public void oemAcknowledgeRilConnectedResponse(RadioResponseInfo info) {}
+    public void oemGetPhoneBookStorageInfoResponse(RadioResponseInfo info, ArrayList<Integer> phoneBookInfo) {}
+    public void oemUsimPbCapaResponse(RadioResponseInfo info, ArrayList<Integer> usimPbCapa) {}
+    public void oemSetSimPowerResponse(RadioResponseInfo info, int power) {}
+    public void oemSetSimOnOffResponse(RadioResponseInfo info) {}
+    public void oemSetSimInitEventResponse(RadioResponseInfo info) {}
+    public void oemGetSimLockInfoResponse(RadioResponseInfo info, ArrayList<Integer> simLockInfO) {}
+    public void oemSupplyIccPersoResponse(RadioResponseInfo info) {}
+    public void oemChangeIccPersoResponse(RadioResponseInfo info) {}
+    public void oemGetPhoneBookEntryResponse(RadioResponseInfo info, OemSimPBResponse SimPBResponseInfo) {}
+    public void oemAccessPhoneBookEntryResponse(RadioResponseInfo info, int SimPbAccessResp) {}
+    public void oemGetCellBroadcastConfigResponse(RadioResponseInfo info, OemCbConfigArgs configs) {}
+    public void oemEmergencySearchResponse(RadioResponseInfo info, int respEmergencySearch) {}
+    public void oemEmergencyControlResponse(RadioResponseInfo info) {}
+    public void oemGetAtrResponse(RadioResponseInfo info, String atr) {}
+    public void oemSendCdmaSmsExpectMoreResponse(RadioResponseInfo info, SecSendSmsResult sms) {}
+    public void secSendSmsResponse(RadioResponseInfo info, SecSendSmsResult sms) {}
+    public void secSendSMSExpectMoreResponse(RadioResponseInfo info, SecSendSmsResult sms) {}
+    public void secSendCdmaSmsResponse(RadioResponseInfo info, SecSendSmsResult sms) {}
+    public void secSendImsSmsResponse(RadioResponseInfo info, SecSendSmsResult sms) {}
+    public void secSetDataAllowedResponse(RadioResponseInfo info) {}
+    public void secGetCdmaRoamingPreferenceResponse(RadioResponseInfo info, int n, int m) {}
+    public void secEnable5gResponse(RadioResponseInfo info) {}
+    public void secDisable5gResponse(RadioResponseInfo info) {}
+    public void secQuery5gStatusResponse(RadioResponseInfo info) {}
+    public void secQueryNrDcParamResponse(RadioResponseInfo info, DcParam endcDcnr) {}
+    public void secQueryNrBearerAllocationResponse(RadioResponseInfo info, int bearerStatus) {}
+    public void secQueryNrSignalStrengthResponse(RadioResponseInfo info, NrSignalStrength nrSignalStrength) {}
+    public void oemQueryCsgListResponse(RadioResponseInfo info, ArrayList<OemCsgInfo> csgInfos) {}
+    public void oemSelectCsgManualResponse(RadioResponseInfo info) {}
+}
-- 
2.25.1

